---------------------------------------------------------------------
                             Wildfly
---------------------------------------------------------------------
10/06/2019
Java
.....................................................................
Java EE e Servidores de Aplicacao
(versao atual = Java EE 8.0)
 - JBoss AS
   . opensource
 - JBoss EAP
   . pago
 - Wildfly
   . free
   . opensource
   . mais leve, agil
   . melhor performance
   . trabalha com micro containers
   . utilizado pelo Banco do Brasil

Windows Subsystem for Linux
Usando Linux no Windows 10
https://docs.microsoft.com/en-us/windows/wsl/install-win10

Ferramentas essenciais:
 - wildfly
 - maven


Criacao de usuarios
> sudo groupadd wildfly
> sudo useradd -r -g wildfly -d /opt/wildfly -s /sbin/nologin wildfly

Decompactando o wildfly
> tar -xzvf wildfly-16.0.0.Final.tar.gz	 --directory /opt 
> cd /opt

Fazendo um link simbolico
> ln -s wildfly-16.0.0.Final wildfly
> chown -R wildfly. /opt/wildfly-16.0.0.Final/
> cd /opt/wildfly-16.0.0.Final/

Executando o wildfly
> su -s "/bin/bash" -c "bin/standalone.sh" wildfly
  acessar http://localhost:8080

Criando user no management:
- configuracao gerada no arquivo mgmt-users.properties 
- wildfly vem com um BD integrado

* /sbin/nologin  => nao permite acesso aa linha de comando para esse usuario
* sudo -i        => ir para o root
* chown -R wildfly. /opt/wildfly16/
  wildfly. == wildfly:wildfly

Wildfly diretorios:
- appclient  == aplicacoes "desempacotadas"
- bin        == executaveis
- domain     == cluster de wildfly (+-)
                distribuido, alta disponibilidade
- modules    == bibliotecas, driver jdbc (diferente do padrao web do Tomcat)
- standalone == configuracao, dados temporarios da maquina de desenvolvimento
  standalone/deployments == onde colocar os WARs



---------------------------------------------------------------------
11/06/2019
.....................................................................
no ~/.profile:

export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_211
export FORGE_HOME=/opt/forge-distribution-3.9.2.Final
export PATH=$PATH:$FORGE_HOME/bin
export MAVEN_HOME=/opt/apache-maven-3.6.1/
export PATH=$PATH:$MAVEN_HOME/bin
export WILDFLY_HOME=/opt/wildfly

maven archetype web 7

> forge
>> project-new --type war
http://forge.jboss.org/document/write-a-java-ee-web-application---basic
>> project-new --named conference
>> jpa-new-entity --named Mapa
>> jpa-new-field --named nome
>> jpa-new-field --named latitude
>> jpa-new-field --named longitude
>> jpa-new-field --named descricao

> cp meuTeste.war /opt/wildfly/standalone/deployments/
	

---------------------------------------------------------------------
12/06/2019
.....................................................................
Modos de funcionamento do Wildfly
- Standalone
- Domain
  . cada servidor tem seu IP
- Cluster

> sudo ./domain.sh -b 0.0.0.0 -bmanagement 0.0.0.0
  - starta o wildfly como dominio
  - starta 2 servidores por default (2 hosts e 1 host controller = 1 domain host controller)

 ===================================================================================
||                                Modo domain                                      ||
||                                                                                 || 
||  ----------------------------------        ----------------------------------   ||
|| |                   ------------   |      |                   ------------   |  ||
|| |  -------------   | servidor 1 |  |      |  -------------   | servidor 1 |  |  ||
|| | | controlador |   ------------   |      | | controlador |   ------------   |  ||
|| | | host 1      |   ------------   |      | | host 2      |   ------------   |  ||
|| |  ----|--------   | servidor 2 |  |      |  ----|--------   | servidor 2 |  |  ||
|| |      |            ------------   |      |      |            ------------   |  ||
||  ------|---------------------------        ------|---------------------------   ||
||        |                                         |                              ||
||________|_________________________________________|______________________________||
||                      Host controlador de Dominio                                ||     
 ===================================================================================  

domain/configuration/domain.xml

masters:
  1. executar /bin/add-user.sh
     o usuario eh adicionado em domain/configuration/mgmt-users.properties
  2. ao final da execucao, aparece a seguinte linha:
     >> To represent the user add the following to the server-identities definition <secret value="cmFpejEyMw==" />
  3. salvar essa senha cmFpejEyMw== para os slaves usarem depois

slaves:
  1. abrir arquivo host_slave.xml
  2. salvar como host.xml
  3. inserir
     <security-realm name="SlaveRealm">
       <server-identities>
         <secret value="cmFpejEyMw==" />
       </server-identities>
     </security-realm>
  4. inserir 
     <domain-controller>
       <remote protocol="remote" host="192.168.0.101" port="9999" username="admadm" security-realm="SlaveRealm">
     </domain-controller>

     no caso de dar problema de timeout por tentar acessar a porta 9999:

     <domain-controller>
       <remote protocol="http-remoting" host="192.168.15.7" port="9990" username="admadm" security-realm="SlaveRealm">
     </domain-controller>

  5. > tellnet 198.162.15.7 9990
     tellnet no ip do master e na porta 9990
     

---------------------------------------------------------------------
13/06/2019
.....................................................................

> git clone  https://github.com/modcluster/mod_cluster.git
> sudo apt install maven
> cd mod_cluster
> mvn install

jboss-cli
- docs: https://docs.wildfly.org/12/#administrator-guides
- precisa ter uma instancia de wildfly rodando
> sudo /opt/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0

- iniciando o prompt do jboss-cli
> sudo /opt/wildfly/bin/jboss-cli.sh 
>> connect 
>> connect 192.168.15.7:9990
   ip_do_domain:porta
>> ls -l
   lista atributos da instancia
>> deploy /home/home/curso_wildfly/zarb/Mapa/target/Mapa.war --force
>> undeploy Mapa.war

. o domain nao tem acesso ao filesystem "local"
. uma aplicacao distribuida em domain tem q ter um filesystem virtualizado tb.

https://access.redhat.com/documentation/en-us/jboss_enterprise_application_platform/6.3/html/
administration_and_configuration_guide/install_a_jdbc_driver_as_a_core_module1

/subsystem=datasources:installed-drivers-list


/profile=ha/subsystem=datasources/jdbc-driver=mysql:add(driver-name=mysql,driver-module-name=com.mysql,driver-xa-datasource-class-name=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource)


---------------------------------------------------------------------
14/06/2019
.....................................................................
- Instalar apache
  > sudo apt install apache2

- Instalar modulo mod_cluster do apache
	
- Baixar o arquivo https://www.google.com/url?q=https://github.com/modcluster/mod_cluster/releases/download/1.3.1.Final/mod_cluster-1.3.1.Final-linux2-x64.tar.gz&sa=D&source=hangouts&ust=1560600017232000&usg=AFQjCNG57hgxcntTGQQcFI7ioizWz-H6jA

- Descompactar o modulo
  > tar -zxvf mod_cluster-1.3.1.Final-linux2-x64.tar.gz

- Copiar os modulos para o apache
  > cd /home/home/Downloads/opt/jboss/httpd/lib/httpd/modules
  > sudo cp * /usr/lib/apache2/modules/

- Subir o wildfly no modo domain
  >  sudo /opt/wildfly/bin/domain.sh -b 0.0.0.0 -bmanagement 0.0.0.0

- anotar as portas dos 2 servidores q subiram
  S1: 41574 e S2: 41576 
  S1: 41686 e S2: 41688 
  S1: 33548 e S2: 33550


Messaging 
Apache ActiveMQ

> sudo /opt/wildfly/bin/standalone.sh -c standalone-full-ha.xml
  -c == procura no diretorio de configuracao


-------------------- RBAC -----------------------------------------------------------------
Roles
This system is currently configured to use simple access controls, which will not utilize changes made in this section. In order to utilize RBAC related settings, you will need to enable role based access controls. Enable RBAC
There are seven predefined user roles:

Monitor
Operator
Maintainer
Deployer
Auditor
Administrator
SuperUser
Each of these roles has a different set of permissions and is designed for specific use cases. The Monitor, Operator, Maintainer, Administrator, and SuperUser role each build upon each other, with each having more permissions than the previous. The Auditor and Deployer roles are similar to the Monitor and Maintainer roles respectively but have some additional special permissions and restrictions.
-------------------- RBAC -----------------------------------------------------------------





